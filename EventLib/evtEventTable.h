#pragma once

/*==============================================================================
Provides a class definition the event table.
==============================================================================*/

//******************************************************************************
//******************************************************************************
//******************************************************************************

#include "evtEventDefs.h"
#include "evtEventTableRecord.h"
#include "evtEventRecord.h"

namespace Evt
{

//******************************************************************************
//******************************************************************************
//******************************************************************************
// This is a class that implments an event table, which is an array of
// event table table records

class EventTable
{
public:

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Members.

   // Array of event table records.
   EventTableRecord mArray[cEvt_MaxNumEvents];


   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Constructor.
   EventTable();
   void reset();

   // Initialize a record.
   void initializeRecord(
      int aEvtId,
      int aType,
      int aDefaultSeverity,
      const char* aShowStringForSet,
      const char* aShowStringForClear,
      const char* aShowStringForAlarm);

   // Initialize all records.
   void initialize();

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Update with an event record.
   void update(EventRecord& aEventRecord);

   //***************************************************************************
   //***************************************************************************
   //***************************************************************************
   // Methods.

   // Show.
   void showRecord(int aEvtIdint, int aPrintFilter = 0);
};

//******************************************************************************
//******************************************************************************
//******************************************************************************
}//namespace


